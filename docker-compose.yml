services:
  archedu:
    build: .
    container_name: archedu
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    restart: unless-stopped
    volumes:
      - ./staticfiles:/app/config/staticfiles
      - ./media:/app/config/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["sh", "/app/entrypoint.sh"]
    networks:
      - archedu-net
      - common-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - archedu-net
      - common-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/archedu.conf:/etc/nginx/conf.d/archedu.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot
      - ./media:/media
      - ./staticfiles:/staticfiles
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - archedu
    networks:
      - archedu-net
      - common-net

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c"
    command: >
      "certbot certonly --webroot -w /var/www/certbot
      --email www.edvent.uz@gmail.com --agree-tos --no-eff-email
      -d archedu.uz -d www.archedu.uz --non-interactive"

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - archedu-net
      - common-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build: .
    env_file:
      - .env
    command: celery -A config worker --loglevel=info --without-gossip --without-mingle --without-heartbeat
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      archedu:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - archedu-net
      - common-net
    healthcheck:
      test: ["CMD", "celery", "-A", "config", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  celery-beat:
    build: .
    env_file:
      - .env
    command: celery -A config beat --loglevel=info
    volumes:
      - .:/app
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      redis:
        condition: service_healthy
      archedu:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - archedu-net
      - common-net
    healthcheck:
      test: ["CMD", "celery", "-A", "config", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  static_volume:
  media_volume:
  certbot-etc:
  certbot-var:
  postgres_data:

networks:
  common-net:
    external: true
  archedu-net:
    driver: bridge
