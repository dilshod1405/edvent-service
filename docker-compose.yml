version: '3.9'

services:
  archedu:
    build: .
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.production
    restart: always
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    command: >
      sh -c "
        python manage.py makemigrations authentication &&
        python manage.py makemigrations education &&
        python manage.py makemigrations payment &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 4
      "

  db:
    image: postgres:15
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d/archedu.conf:/etc/nginx/conf.d/archedu.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - archedu

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c"
    command: >
      "certbot certonly --webroot -w /var/www/certbot
      --email www.edvent.uz@gmail.com --agree-tos --no-eff-email
      -d archedu.uz -d www.archedu.uz --non-interactive"

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - archedu

  celery-beat:
    build: .
    command: celery -A config beat --loglevel=info
    volumes:
      - .:/app
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    env_file:
      - .env
    depends_on:
      - redis
      - archedu

volumes:
  static_volume:
  media_volume:
  certbot-etc:
  certbot-var:
  postgres_data:
